TRPG 웹 게임 프로젝트 현재 상태 (2025-08-01)

## 프로젝트 개요
- Spring Boot 기반 TRPG (테이블톱 롤플레잉 게임) 웹 애플리케이션
- AI 기반 던전 마스터 시스템 구현
- Gemini API와 Cloudflare AutoRAG 통합

## 구현된 기능

### 1. 백엔드 아키텍처 (Spring Boot)
- PocAiApplication.java: 메인 애플리케이션
- WebConfig.java: CORS 설정 포함

### 2. AI 통합 서비스
**GeminiService.java**
- Google Gemini API 연동
- TRPG 시나리오 생성
- 캐릭터 대화 및 스토리텔링

**AutoRAGService.java** 
- Cloudflare AutoRAG API 연동
- 지식 기반 검색 (좀비 데이터셋)
- 컨텍스트 검색 및 규칙 검색 기능

### 3. 데이터 구조
**DTO 클래스들:**
- GeminiRequest/Response: Gemini API 통신
- AutoRAGRequest/Response: RAG 검색 요청/응답

### 4. 웹 컨트롤러
**ChatController.java**
- `/api/chat` 엔드포인트
- AI와 실시간 채팅 기능

**WebController.java**
- 정적 파일 서빙
- 메인 페이지 라우팅

### 5. 프론트엔드 (정적 파일)
**index.html**
- 4가지 세계관 선택 (판타지, 사이버펑크, 모던, 아포칼립스)
- 각 세계관별 배경 이미지
- 채팅 인터페이스

### 6. 지식 베이스
**trpg-knowledge-base.json**
- TRPG 게임 규칙 및 설정
- 좀비 아포칼립스 시나리오 데이터

**AutoRAGDataUploader.java**
- Cloudflare 데이터셋 업로드 유틸리티

## 현재 설정

### API 키 설정 (application.properties)
- Gemini API Key: AIzaSyB2QMsDAkEcDoyBzIFhqIgX7bvqx0nDz_E
- Cloudflare AutoRAG Token: kxQBttFprOM7dZU-TGhJUfgc8PDIGoB_X-taiLI4
- Cloudflare Account ID: cf9805e9369094830fd61f0e07f1e953
- Dataset ID: zombie

### 기술 스택
- Java/Spring Boot
- Gradle 빌드 시스템
- HTML/CSS/JavaScript (바닐라)
- Google Gemini 1.5 Flash
- Cloudflare AutoRAG

## 현재 이슈
- Cloudflare API 토큰 제한 도달
- OpenAI RAG 대안 검토 중

## 파일 구조 요약
```
src/main/
├── java/com/pocai/
│   ├── PocAiApplication.java
│   ├── config/
│   │   ├── GeminiConfig.java
│   │   └── WebConfig.java
│   ├── controller/
│   │   ├── ChatController.java
│   │   └── WebController.java
│   ├── dto/
│   │   ├── AutoRAGRequest.java
│   │   ├── AutoRAGResponse.java
│   │   ├── GeminiRequest.java
│   │   └── GeminiResponse.java
│   ├── service/
│   │   ├── AutoRAGService.java
│   │   └── GeminiService.java
│   └── util/
│       └── AutoRAGDataUploader.java
└── resources/
    ├── application.properties
    ├── static/
    │   ├── index.html
    │   └── images/ (4개 배경 이미지)
    └── trpg-knowledge-base.json
```

## Git 상태
- 현재 브랜치: main
- 수정된 파일들: 설정 및 서비스 클래스들
- 신규 파일들: AutoRAG 관련 클래스들

## 다음 단계 고려사항
1. Cloudflare 토큰 제한 해결 (업그레이드 vs 대안)
2. OpenAI RAG 마이그레이션 검토
3. 프론트엔드 개선
4. 테스트 케이스 추가